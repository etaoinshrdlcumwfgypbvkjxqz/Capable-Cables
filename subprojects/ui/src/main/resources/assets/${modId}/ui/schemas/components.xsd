<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="https://github.com/etaoinshrdlcumwfgypbvkjxqz/Capable-Cables/schemas/ui/components"
           elementFormDefault="qualified"
           version="1.0"
           xmlns:ui="https://github.com/etaoinshrdlcumwfgypbvkjxqz/Capable-Cables/schemas/ui/components"
           xml:lang="EN">
	<xs:element name="ui" id="ui">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ui:alias" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ui:component"/>
			</xs:sequence>
			<xs:anyAttribute namespace="##other" processContents="lax"/>
		</xs:complexType>
	</xs:element>

	<!-- SECTION top -->

	<xs:element name="alias" id="alias">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="class" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- SECTION components -->

	<xs:complexType name="componentBasedType" id="componentBasedType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ui:property"/>
			<xs:element ref="ui:binding"/>
		</xs:choice>
		<xs:attribute name="class" type="xs:string" use="required"/>
	</xs:complexType>

	<xs:element name="component" id="component">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ui:componentBasedType">
					<xs:sequence>
						<xs:element ref="ui:extension" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element ref="ui:component" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<!-- SECTION DOM -->
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="load" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="unload" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="abort" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="error" type="xs:string"/>
					<xs:attribute name="select" type="xs:string"/>
					<xs:attribute name="blur" type="xs:string"/>
					<xs:attribute name="focus" type="xs:string"/>
					<xs:attribute name="focusin" type="xs:string"/>
					<xs:attribute name="focusout" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="auxclick" type="xs:string"/>
					<xs:attribute name="click" type="xs:string"/>
					<xs:attribute name="dblclick" type="xs:string"/>
					<xs:attribute name="mousedown" type="xs:string"/>
					<xs:attribute name="mouseenter" type="xs:string"/>
					<xs:attribute name="mouseleave" type="xs:string"/>
					<xs:attribute name="mousemove" type="xs:string"/>
					<xs:attribute name="mouseout" type="xs:string"/>
					<xs:attribute name="mouseover" type="xs:string"/>
					<xs:attribute name="mouseup" type="xs:string"/>
					<xs:attribute name="wheel" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="beforeinput" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="input" type="xs:string"/>
					<xs:attribute name="keydown" type="xs:string"/>
					<xs:attribute name="keyup" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="compositionstart" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="compositionupdate" type="xs:string"/>
					<!-- COMMENT unused, reserved -->
					<xs:attribute name="compositionend" type="xs:string"/>
					<!-- SECTION Standard -->
					<xs:attribute name="char_typed" type="xs:string"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="extension" id="extension" type="ui:componentBasedType"/>

	<!-- SECTION property-value pairs -->

	<xs:complexType name="propertyType" id="propertyType">
		<xs:sequence>
			<xs:element ref="ui:value" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" use="required"/>
	</xs:complexType>

	<xs:complexType name="bindingType" id="bindingType">
		<xs:complexContent>
			<xs:extension base="ui:propertyType">
				<xs:attribute name="binding" type="xs:string" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:element name="value" id="value" type="ui:valueType"/>
	<xs:element name="property" id="property">
		<xs:complexType>
			<xs:complexContent>
				<xs:restriction base="ui:propertyType">
					<xs:sequence>
						<xs:element ref="ui:value"/>
					</xs:sequence>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="binding" id="binding" type="ui:bindingType"/>

	<!-- SECTION values -->

	<xs:complexType name="valueType" id="valueType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<!-- unique particle attribution :( -->
			<xs:any/>
		</xs:choice>
		<xs:attribute name="boolean" type="xs:boolean"/>
		<xs:attribute name="byte" type="xs:byte"/>
		<xs:attribute name="short" type="xs:short"/>
		<xs:attribute name="int" type="xs:int"/>
		<xs:attribute name="long" type="xs:long"/>
		<xs:anyAttribute processContents="lax"/>
	</xs:complexType>

	<xs:complexType name="colorType" id="colorType">
		<xs:attribute name="red" type="xs:hexBinary" default="00"/>
		<xs:attribute name="green" type="xs:hexBinary" default="00"/>
		<xs:attribute name="blue" type="xs:hexBinary" default="00"/>
		<xs:attribute name="alpha" type="xs:hexBinary" default="FF"/>
	</xs:complexType>
	<xs:element name="color" type="ui:colorType"/>
</xs:schema>
