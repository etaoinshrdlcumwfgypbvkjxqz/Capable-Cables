<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:ui="https://github.com/etaoinshrdlcumwfgypbvkjxqz/Capable-Cables/schemas/ui/components"
           targetNamespace="https://github.com/etaoinshrdlcumwfgypbvkjxqz/Capable-Cables/schemas/ui/components"
           version="2.3.0"
           xml:lang="EN">
	<!-- SECTION ================================================== components ================================================== -->

	<!-- COMMENT ui -->
	<xs:element name="ui" id="ui">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ui:using" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ui:view"/>
				<xs:element ref="ui:component"/>
			</xs:sequence>
			<xs:anyAttribute namespace="##other" processContents="lax"/>
		</xs:complexType>
		<!-- COMMENT component id -->
		<xs:key name="componentID">
			<xs:selector xpath=".//ui:component"/>
			<xs:field xpath="@name"/>
		</xs:key>
		<xs:keyref name="componentIDRef" refer="ui:componentID">
			<xs:selector xpath=".//ui:anchor"/>
			<xs:field xpath="@target"/>
		</xs:keyref>
		<!-- COMMENT renderer id -->
		<xs:key name="rendererID">
			<xs:selector xpath=".//ui:renderer"/>
			<xs:field xpath="@name"/>
		</xs:key>
		<!-- COMMENT using id -->
		<xs:key name="usingID">
			<xs:selector xpath="ui:using"/>
			<xs:field xpath="@alias"/>
		</xs:key>
		<xs:keyref name="usingIDRef" refer="ui:usingID">
			<xs:selector xpath=".//ui:*"/><!-- TODO no idea why './/ui:*' does not work -->
			<xs:field xpath="@class"/>
		</xs:keyref>
	</xs:element>

	<!-- SECTION top -->

	<!-- COMMENT using -->
	<xs:element name="using" id="using">
		<xs:complexType>
			<xs:attribute name="alias" type="xs:string" use="required"/>
			<xs:attribute name="target" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- SECTION components -->

	<!-- COMMENT shape -->
	<xs:element name="shape" id="shape">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ui:affineTransformDefiner" minOccurs="0"/>
				<xs:element ref="ui:constraint" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="ui:propertyContainerGroup"/>
			</xs:sequence>
			<xs:attributeGroup ref="ui:classBasedAttributeGroup"/>
			<xs:attribute name="x" type="xs:double" default="0"/>
			<xs:attribute name="y" type="xs:double" default="0"/>
			<xs:attribute name="width" type="xs:double" default="1"/>
			<xs:attribute name="height" type="xs:double" default="1"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT renderer -->
	<xs:element name="renderer">
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="ui:propertyContainerGroup"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attributeGroup ref="ui:classBasedOptionalAttributeGroup"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT extension -->
	<xs:element name="extension">
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="ui:propertyContainerGroup"/>
				<xs:element ref="ui:renderer"/>
				<xs:element ref="ui:anyContainer" minOccurs="0"/>
			</xs:sequence>
			<xs:attributeGroup ref="ui:classBasedAttributeGroup"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT view -->
	<xs:element name="view">
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="ui:propertyContainerGroup"/>
				<xs:element ref="ui:extension" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ui:anyContainer" minOccurs="0"/>
			</xs:sequence>
			<xs:attributeGroup ref="ui:classBasedAttributeGroup"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT component -->
	<xs:element name="component">
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="ui:propertyContainerGroup"/>
				<xs:element ref="ui:shape"/>
				<xs:element ref="ui:anchor" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ui:renderer"/>
				<xs:element ref="ui:extension" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ui:component" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ui:anyContainer" minOccurs="0"/>
			</xs:sequence>
			<xs:attributeGroup ref="ui:classBasedAttributeGroup"/>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attributeGroup ref="ui:componentEventsAttributeGroup"/>
		</xs:complexType>
	</xs:element>

	<!-- SECTION ================================================== utilities ================================================== -->

	<!-- SECTION groups -->

	<!-- COMMENT property container group -->
	<xs:group name="propertyContainerGroup">
		<xs:sequence>
			<xs:element ref="ui:property" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>

	<!-- COMMENT class-based attribute groups -->
	<xs:attributeGroup name="classBasedAttributeGroup">
		<xs:attribute name="class" type="xs:string" use="required"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="classBasedOptionalAttributeGroup">
		<xs:attribute name="class" type="xs:string"/>
	</xs:attributeGroup>

	<!-- COMMENT DOM events attribute group -->
	<xs:attributeGroup name="DOMEventsAttributeGroup">
		<xs:attribute name="load" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="unload" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="abort" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="error" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="select" type="ui:NSPrefixedString"/>
		<xs:attribute name="blur" type="ui:NSPrefixedString"/>
		<xs:attribute name="focus" type="ui:NSPrefixedString"/>
		<xs:attribute name="focusin" type="ui:NSPrefixedString"/>
		<xs:attribute name="focusout" type="ui:NSPrefixedString"/>
		<xs:attribute name="auxclick" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="click" type="ui:NSPrefixedString"/>
		<xs:attribute name="dblclick" type="ui:NSPrefixedString"/>
		<xs:attribute name="mousedown" type="ui:NSPrefixedString"/>
		<xs:attribute name="mouseenter" type="ui:NSPrefixedString"/>
		<xs:attribute name="mouseleave" type="ui:NSPrefixedString"/>
		<xs:attribute name="mousemove" type="ui:NSPrefixedString"/>
		<xs:attribute name="mouseout" type="ui:NSPrefixedString"/>
		<xs:attribute name="mouseover" type="ui:NSPrefixedString"/>
		<xs:attribute name="mouseup" type="ui:NSPrefixedString"/>
		<xs:attribute name="wheel" type="ui:NSPrefixedString"/>
		<xs:attribute name="beforeinput" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="input" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="keydown" type="ui:NSPrefixedString"/>
		<xs:attribute name="keyup" type="ui:NSPrefixedString"/>
		<xs:attribute name="compositionstart" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="compositionupdate" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
		<xs:attribute name="compositionend" type="ui:NSPrefixedString"/><!-- COMMENT unused, reserved -->
	</xs:attributeGroup>

	<!-- COMMENT component events attribute group -->
	<xs:attributeGroup name="componentEventsAttributeGroup">
		<xs:attributeGroup ref="ui:DOMEventsAttributeGroup"/>
		<xs:attribute name="char_typed" type="ui:NSPrefixedString"/>
	</xs:attributeGroup>

	<!-- SECTION elements -->

	<!-- COMMENT IUIPropertyMappingValue -->
	<!-- COMMENT property -->
	<xs:element name="property">
		<xs:complexType>
			<xs:sequence>
				<xs:any minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="key" type="xs:string" use="required"/>
			<xs:attribute name="bindingKey" type="ui:NSPrefixedString"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT method -->
	<xs:element name="method">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="name" type="xs:string" use="required"/>
					<xs:attribute name="delimiter" type="xs:string" default=","/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT IShapeConstraint -->
	<xs:element name="constraint">
		<xs:complexType>
			<xs:attribute name="minX" type="xs:double"/>
			<xs:attribute name="minY" type="xs:double"/>
			<xs:attribute name="maxX" type="xs:double"/>
			<xs:attribute name="maxY" type="xs:double"/>
			<xs:attribute name="minWidth" type="xs:double"/>
			<xs:attribute name="minHeight" type="xs:double"/>
			<xs:attribute name="maxWidth" type="xs:double"/>
			<xs:attribute name="maxHeight" type="xs:double"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT IShapeAnchor -->
	<xs:element name="anchor">
		<xs:complexType>
			<xs:attribute name="target" type="xs:string" use="required"/>
			<xs:attribute name="originSide" type="ui:sideType" use="required"/>
			<xs:attribute name="targetSide" type="ui:sideType" use="required"/>
			<xs:attribute name="borderThickness" type="xs:double" default="0"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT EnumUISide -->
	<xs:simpleType name="sideType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="UP"/>
			<xs:enumeration value="DOWN"/>
			<xs:enumeration value="LEFT"/>
			<xs:enumeration value="RIGHT"/>
			<xs:enumeration value="HORIZONTAL"/>
			<xs:enumeration value="VERTICAL"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- COMMENT AffineTransform -->
	<xs:element name="affineTransformDefiner">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ui:affineTransform" minOccurs="0"/>
				<xs:element ref="ui:method" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="affineTransform">
		<xs:complexType>
			<xs:attribute name="translateX" type="xs:double" default="0"/>
			<xs:attribute name="translateY" type="xs:double" default="0"/>
			<xs:attribute name="scaleX" type="xs:double" default="1"/>
			<xs:attribute name="scaleY" type="xs:double" default="1"/>
			<xs:attribute name="shearX" type="xs:double" default="0"/>
			<xs:attribute name="shearY" type="xs:double" default="0"/>
		</xs:complexType>
	</xs:element>

	<!-- COMMENT any container -->
	<xs:element name="anyContainer">
		<xs:complexType>
			<xs:sequence>
				<xs:any minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- SECTION types -->

	<!-- COMMENT INamespacePrefixedString -->
	<xs:simpleType name="NSPrefixedString">
		<xs:restriction base="xs:string">
			<xs:pattern value=".*:?.*"/><!-- COMMENT the pattern is useless -->
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
